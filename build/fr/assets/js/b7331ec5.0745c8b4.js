"use strict";(self.webpackChunkapi_documentation=self.webpackChunkapi_documentation||[]).push([[470],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),u=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=u(e.components);return a.createElement(i.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,h=p["".concat(i,".").concat(m)]||p[m]||d[m]||o;return n?a.createElement(h,s(s({ref:t},l),{},{components:n})):a.createElement(h,s({ref:t},l))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[p]="string"==typeof e?e:r,s[1]=c;for(var u=2;u<o;u++)s[u]=n[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(7294),r=n(6010);const o={tabItem:"tabItem_Ymn6"};function s(e){let{children:t,hidden:n,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,s),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>k});var a=n(7462),r=n(7294),o=n(6010),s=n(2466),c=n(6550),i=n(1980),u=n(7392),l=n(12);function p(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function d(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,c.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,i._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=d(e),[s,c]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[i,u]=h({queryString:n,groupId:a}),[p,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,l.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),b=(()=>{const e=i??p;return m({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{b&&c(b)}),[b]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);c(e),u(e),f(e)}),[u,f,o]),tabValues:o}}var b=n(2389);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function g(e){let{className:t,block:n,selectedValue:c,selectValue:i,tabValues:u}=e;const l=[],{blockElementScrollPositionUntilNextRender:p}=(0,s.o5)(),d=e=>{const t=e.currentTarget,n=l.indexOf(t),a=u[n].value;a!==c&&(p(t),i(a))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=l.indexOf(e.currentTarget)+1;t=l[n]??l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;t=l[n]??l[l.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:s}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:c===t?0:-1,"aria-selected":c===t,key:t,ref:e=>l.push(e),onKeyDown:m,onClick:d},s,{className:(0,o.Z)("tabs__item",y.tabItem,s?.className,{"tabs__item--active":c===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:a}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function w(e){const t=f(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",y.tabList)},r.createElement(g,(0,a.Z)({},e,t)),r.createElement(v,(0,a.Z)({},e,t)))}function k(e){const t=(0,b.Z)();return r.createElement(w,(0,a.Z)({key:String(t)},e))}},8240:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>c,metadata:()=>u,toc:()=>p});var a=n(7462),r=(n(7294),n(3905)),o=n(4866),s=n(5162);const c={sidebar_position:1},i="Create contact",u={unversionedId:"Contacts/create_contact",id:"Contacts/create_contact",title:"Create contact",description:"Introduction//dev.hudumasms.com/api/contacts/create), you can securely send the contact's name, phone number, and email as JSON in the request body. This code demonstrates the necessary steps and headers, including authentication with a bearer token, to successfully add a contact to the HudumaSMS system.",source:"@site/docs/Contacts/create_contact.md",sourceDirName:"Contacts",slug:"/Contacts/create_contact",permalink:"/fr/docs/Contacts/create_contact",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Contacts/create_contact.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Contacts",permalink:"/fr/docs/category/contacts"},next:{title:"Edit contact",permalink:"/fr/docs/Contacts/edit_contact"}},l={},p=[],d={toc:p},m="wrapper";function h(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"create-contact"},"Create contact"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Introduction"),": The following code snippet illustrates how to integrate the HudumaSMS API into your application to add a new contact. By making a ",(0,r.kt)("inlineCode",{parentName:"p"},"POST")," request to the designated API endpoint (",(0,r.kt)("inlineCode",{parentName:"p"},"https://dev.hudumasms.com/api/contacts/create"),"), you can securely send the contact's name, phone number, and email as JSON in the request body. This code demonstrates the necessary steps and headers, including authentication with a bearer token, to successfully add a contact to the HudumaSMS system."),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"javascript",label:"Javascript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"\nconst saveContact = async () => {\n  try {\n    // Send a POST request to the API endpoint for creating contacts\n    const response = await fetch('https://dev.hudumasms.com/api/contacts/create', {\n      method: 'POST',\n      body: JSON.stringify({\n        names: name,\n        number: Number(phone),\n        email: email\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n\n    // Parse the response body as JSON\n    const json = await response.json();\n\n    // Check if the response is successful\n    if (response.ok) {\n      console.log('New contact added successfully.');\n    }\n\n    // Handle error responses\n    if (!response.ok) {\n      console.log('Error:', json.message);\n    }\n  } catch (err) {\n    console.log('Error while adding new contact:', err);\n  }\n};\n"))),(0,r.kt)(s.Z,{value:"php",label:"PHP",mdxType:"TabItem"},"Certainly! Here's a  PHP code snippet for adding a new contact to the HudumaSMS system:",(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n// API endpoint URL\n$url = 'https://dev.hudumasms.com/api/contacts/create';\n\n// Data to send in the request body\n$data = array(\n    'names' => $name,\n    'number' => $phone,\n    'email' => $email\n);\n\n// Set the headers and request options\n$options = array(\n    'http' => array(\n        'header' => \"Content-Type: application/json\\r\\n\" .\n                    \"Accept: application/json\\r\\n\" .\n                    \"Authorization: Bearer \" . $token . \"\\r\\n\",\n        'method' => 'POST',\n        'content' => json_encode($data)\n    )\n);\n\n// Create a stream context\n$context = stream_context_create($options);\n\n// Send the request and get the response\n$response = file_get_contents($url, false, $context);\n\n// Parse the response JSON\n$responseData = json_decode($response, true);\n\n// Check if the response is successful\nif (isset($responseData['success']) && $responseData['success']) {\n    echo \"New contact added successfully.\";\n    // Additional actions upon successful contact creation\n} else {\n    echo \"Error: \" . $responseData['message'];\n    // Handle the error response\n}\n?>\n")),(0,r.kt)("p",null,"In this simplified version, we use the ",(0,r.kt)("inlineCode",{parentName:"p"},"file_get_contents")," function along with a stream context to send a ",(0,r.kt)("inlineCode",{parentName:"p"},"POST")," request to the specified API endpoint (",(0,r.kt)("inlineCode",{parentName:"p"},"https://dev.hudumasms.com/api/contacts/create"),"). The request body is set as JSON using ",(0,r.kt)("inlineCode",{parentName:"p"},"json_encode"),", and the necessary headers are included in the context options. After receiving the response, we decode the JSON and check if the request was successful. If successful, we display a success message. Otherwise, we handle the error response by displaying the corresponding error message."),(0,r.kt)("p",null,"Please note that this simplified version uses the ",(0,r.kt)("inlineCode",{parentName:"p"},"file_get_contents")," function, which requires the ",(0,r.kt)("inlineCode",{parentName:"p"},"allow_url_fopen")," setting to be enabled on your server.")),(0,r.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"}," Here's a version of the Java code snippet for adding a new contact to the HudumaSMS system:",(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\n\npublic class AddContactExample {\n\n    public static void main(String[] args) {\n        // API endpoint URL\n        String apiUrl = "https://dev.hudumasms.com/api/contacts/create";\n\n        // Request body data\n        String requestBody = "{\\"names\\": \\"John Doe\\", \\"number\\": \\"123456789\\", \\"email\\": \\"johndoe@example.com\\"}";\n\n        try {\n            // Create URL object\n            URL url = new URL(apiUrl);\n\n            // Create HTTP connection\n            HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n            conn.setRequestMethod("POST");\n            conn.setRequestProperty("Content-Type", "application/json");\n            conn.setRequestProperty("Accept", "application/json");\n            conn.setRequestProperty("Authorization", "Bearer YOUR_API_TOKEN"); // Replace with your API token\n            conn.setDoOutput(true);\n\n            // Write the request body\n            OutputStream outputStream = conn.getOutputStream();\n            outputStream.write(requestBody.getBytes());\n            outputStream.flush();\n\n            // Get the response code\n            int responseCode = conn.getResponseCode();\n\n            // Read the response body\n            BufferedReader reader;\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));\n            } else {\n                reader = new BufferedReader(new InputStreamReader(conn.getErrorStream()));\n            }\n            StringBuilder response = new StringBuilder();\n            String line;\n            while ((line = reader.readLine()) != null) {\n                response.append(line);\n            }\n            reader.close();\n\n            // Check if the request was successful\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                System.out.println("New contact added successfully.");\n                // Additional actions upon successful contact creation\n            } else {\n                System.out.println("Error: " + response.toString());\n                // Handle the error response\n            }\n\n            // Close the connection\n            conn.disconnect();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n')),(0,r.kt)("p",null,"Please note that you'll need to replace the placeholder values in the ",(0,r.kt)("inlineCode",{parentName:"p"},"requestBody")," and ",(0,r.kt)("inlineCode",{parentName:"p"},'"Bearer YOUR_API_TOKEN"')," with the actual values for the contact you want to add and your HudumaSMS API token, respectively."))))}h.isMDXComponent=!0}}]);